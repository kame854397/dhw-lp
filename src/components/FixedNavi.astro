---
import Button from "./Button.astro";
const naviItem = [
    {section:"feature",label:"STUDIOつくばの特徴",href:"#feature"},
    {section:"course",label:"コース紹介",href:"#course"},
    {section:"works",label:"卒業生の制作物",href:"#works"},
    {section:"interview",label:"卒業生インタビュー",href:"#interview"},
]
---
<div id="fixed-navi" class="container">
    <div class="navi-container">
        <ul class="navi">
            {naviItem.map((item)=>
                <li class="navi-item" data-section={item.section}>
                    <a href={item.href}>
                        {item.label}
                        <div class="arrow">
                            <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <rect class="delay-3" x="0.5" y="3.5" width="3" height="3"/>
                                <rect class="delay-2" x="3.5" y="6.5" width="3" height="3"/>
                                <rect class="delay-1" x="6.5" y="9.5" width="3" height="3"/>
                                <rect class="delay-2" x="9.5" y="6.5" width="3" height="3"/>
                                <rect class="delay-3" x="12.5" y="3.5" width="3" height="3"/>
                            </svg>
                        </div>
                    </a>
                </li>
            )}
            <!-- <li class="contact-button">
                <Button label="お問い合わせ" width="auto" iconSrc="/images/icon-email.svg" color="orange" />
            </li> -->
        </ul>
        <div class="navi-bg"></div>
    </div>
</div>
<script>
    (function(){
        const fixedNavi = document.getElementById('fixed-navi');
        const sections = document.querySelectorAll<HTMLElement>('.section[data-section]');
        const naviItems = fixedNavi.querySelectorAll('.navi-item');
        for(let i=0; i<naviItems.length; i++) {
            const sectionName = naviItems[i].getAttribute('data-section');
            let foundIndex = -1;
            sections.forEach((section, index) => {
                if (section.getAttribute('data-section') === sectionName) {
                    foundIndex = index;
                }
            });
            naviItems[i].setAttribute('data-section-index', String(foundIndex));
        }
        const setActive = ()=> {
            let activeSection;
            let activeSectionIndex = 0;
            for(let i=0; i<sections.length; i++) {
                let offsetTop = Math.floor(sections[i].getBoundingClientRect().top);
                if(offsetTop < 360) {
                    activeSection = sections[i].getAttribute('data-section');
                    activeSectionIndex = i;
                }
            }
            console.log(activeSectionIndex);
            const activeNaviItem = naviItems[activeSection];
            for(let i=0; i<naviItems.length; i++) {
                const sectionIndex = Number(naviItems[i].getAttribute('data-section-index'));
                if (sectionIndex < activeSectionIndex) {
                    naviItems[i].classList.add('is-past');
                } else {
                    naviItems[i].classList.remove('is-past');
                }
                if (naviItems[i].getAttribute('data-section') === activeSection) {
                    naviItems[i].classList.add('is-active');
                } else {
                    naviItems[i].classList.remove('is-active');
                }
            }
        }
        setActive();
        window.addEventListener('scroll',setActive);
    }());
</script>
<style>
    .container {
        position: fixed;
        top: 8px;
        right: 8px;
        z-index: 0;
        transform: translate(0,calc(-100% - 12px));
        transition: 0.5s cubic-bezier(.08,.66,.44,1.23);
        display: flex;
        align-items: center;
        z-index: 8;
        width: var(--content-width-wide);
    }
    .current-section-title {
        position: relative;
        width: calc(var(--width) + 32px);
        height: 48px;
        border-radius: 12px;
        background: var(--color-white-primary);
        font-size: 20px;
        box-shadow: var(--shadow-primary-medium-thin);
        transition: opacity 0.125s, width 0.125s;
    }
    .current-section-title-inner {
        position: absolute;
        width: max-content;
        left: 16px;
        top: 50%;
        transform: translate(0,-50%);
    }
    .current-section-title.is-hide {
        opacity: 0;
    }
    .navi-container {
        -webkit-backdrop-filter: brightness(1.5) saturate(1.6) blur(16px);
        backdrop-filter: brightness(1.5) saturate(1.6) blur(16px);
        border-radius: 16px;
        position: relative;
        width: fit-content;
        margin: 0 0 0 auto;
        z-index: 0;
    }
    .navi-bg {
        position: absolute;
        inset: 0 0 0 0;
        z-index: -1;
        border-radius: 16px;
        overflow: hidden;
        background: rgba(240,220,180,1);
        opacity: 0.5;
    }
    .navi-bg::after {
        content: "";
        position: absolute;
        inset: 0 0 2px 0;
        border-radius: 16px;
        background: var(--color-white-primary);
        z-index: -2;
    }
    .navi-item {
        position: relative;
        transition: opacity 0.5s;
    }
    .navi-item::before {
        content: "";
        position: absolute;
        top: -1px;
        right: 0;
        left: 0;
        height: 4px;
        background: var(--color-orange-primary);
        border-radius: 0 0 2px 2px;
        opacity: 0;
        transition: opacity 0.5s;
    }
    .navi-item.is-active::before {
        opacity: 1;
    }
    .navi {
        position: relative;
        width: fit-content;
        padding: 0 28px;
        display: flex;
        align-items: center;
        font-size: 16px;
        gap: 36px;
        border-radius: 16px;
        border: 1px solid rgba(255,255,255,0.6);
        box-shadow: var(--shadow-primary-large);
    }
    .navi-item>a {
        position: relative;
        display: block;
        padding: 14px 0 32px;
        text-shadow: 0 4px 0 rgba(120,40,0,0.12);
    }
    .arrow {
        position: absolute;
        width: 16px;
        height: 16px;
        left: 50%;
        bottom: 12px;
        transform: translate(-50%,0);
        filter: drop-shadow(0 4px 0 rgba(160,60,0,0.2));
    }
    .arrow svg {
        transform: rotate(180deg);
        fill: var(--color-orange-primary);
        transition: transform 0.25s;
    }
    .navi-item:not(.is-past,.is-active) .arrow svg {
        transform: none;
    }
    :where(.navi-item>a:hover .arrow) rect {
        transform: translate(0,3px);
        animation: arrow-dot-show 0.5s 0s normal both 1 ease-out;
    }
    :where(.navi:has(.navi-item:hover)) .navi-item {
        opacity: 0.35;
    }
    .navi-item:hover {
        opacity: 1;
    }
    .arrow .delay-1 {
        animation-delay: 0s;
    }
    .arrow .delay-2 {
        animation-delay: 0.0625s;
    }
    .arrow .delay-3 {
        animation-delay: 0.125s;
    }
    :global(.is-scrolled) .container {
        translate: 0 0;
        transform: translate(0,0);
    }
    @keyframes arrow-dot-show {
        0% {
            opacity: 0;
            fill: #ffbb00;
        }
        50% {
            opacity: 1;
            fill: #ffbb00;
        }
        100% {
            opacity: 1;
            fill: var(--color-orange-primary);
        }
    }
    @keyframes fixed-navi-show {
        0% {
            transform: translate(0,calc(-100% - 24px));
        }
        50% {
            transform: translate(0,6px);
        }
        100% {
            transform: translate(0,0);
        }
    }
    @media screen and (max-width:1280px) {
        .navi {
            font-size: 16px;
            gap: 24px;
        }
    }
</style>