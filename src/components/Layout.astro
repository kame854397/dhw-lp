---
import Header from "./Header.astro";
import FixedNavi from "./FixedNavi.astro";
import Footer from "./Footer.astro";
import FixedButtons from "./FixedButtons.astro";
import "../css/global.css";
---
<html lang="ja">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
        <meta name="description" content="ここに説明文が入ります">
		<title>デジハリLP</title>
		<link rel="preload" as="image" href="/images/kv-00.webp">
		<link rel="preload" as="image" href="/images/kv-01.webp">
		<link rel="preload" as="image" href="/images/kv-02.webp">
		<link rel="preload" as="image" href="/images/kv-03.webp">
		<link rel="preload" as="image" href="/images/kv-04.webp">
	</head>
	<body class="page">
        <Header />
        <FixedNavi />
		<main>
			<slot />
			<FixedButtons />
		</main>
        <Footer />
		<svg class="svg-filter" style="display:none;"><defs>
			<filter id="chromaticAberration">
				<feColorMatrix type="matrix" values="0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0"/>
				<feOffset dx="-1" dy="-1" result="g"/>
				<feColorMatrix in="SourceGraphic" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0"/>
				<feOffset dx="1" dy="0" result="b"/>
				<feColorMatrix in="SourceGraphic" type="matrix" values="1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0"/>
				<feOffset dx="0" dy="1"/>
				<feComposite in="g" operator="lighter"/>
				<feComposite in="b" operator="lighter"/>
			</filter>
			<filter id="chromaticAberrationLarge">
				<feColorMatrix type="matrix" values="0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0"/>
				<feOffset dx="-6" dy="-6" result="g"/>
				<feColorMatrix in="SourceGraphic" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0"/>
				<feOffset dx="0" dy="6" result="b"/>
				<feColorMatrix in="SourceGraphic" type="matrix" values="1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0"/>
				<feOffset dx="6" dy="6"/>
				<feComposite in="g" operator="lighter"/>
				<feComposite in="b" operator="lighter"/>
			</filter>
		</defs></svg>
	</body>
</html>
<style>
	.page {
		position: relative;
		z-index: 0;
	}
	.page::before {
		content: "";
		position: absolute;
		top: 0;
		left: 50%;
		width: 1560px;
		height: 100%;
		transform: translate(-50%,0);
		background: url("/images/bg-line.svg") center/100% repeat;
		z-index: -1;
		opacity: 0.45;
	}
</style>
<script is:inline src="/js/rellax.min.js"></script>
<script is:inline>
	(function(){
		document.querySelectorAll('a[href^="#"]').forEach(anchor => {
			const offset = anchor.getAttribute("data-scroll-offset") ? anchor.getAttribute("data-scroll-offset") : 0;
			anchor.addEventListener('click', function (e) {
				e.preventDefault();
				const href = anchor.getAttribute('href');
				const target = document.getElementById(href.replace('#', ''));
				const targetPosition = target.getBoundingClientRect().top + window.pageYOffset - offset;
				window.scrollTo({
					top: targetPosition,
					behavior: 'smooth'
				});
			});
		});
	}());
	(function(){
		const addInview = function(){
			const target = document.getElementsByClassName('inview-target');
			const position = Math.floor(window.innerHeight * .75);
			for (let i = 0; i < target.length; i++) {
				let offsetTop = Math.floor(target[i].getBoundingClientRect().top);
				if (offsetTop < position) {
					target[i].classList.add('is-inview');
				}
			}
		}
		addInview();
		const body = document.querySelector('body');
		window.addEventListener('scroll', function(){
			if(window.scrollY > 200) {
				body.classList.add('is-scrolled');
			} else {
				body.classList.remove('is-scrolled');
			}
		});

		window.addEventListener('scroll', addInview, false);
		const studioImageRellax = new Rellax('.studio-image__image');
		const rellax = new Rellax('.rellax');
	}());
</script>
