---
import CourseItem from "./CourseItem.astro";
import CourseNavi from "./CourseNavi.astro";
import courseData from "../data/courseData.json";
---
<div class="container">
    <div id="course-navi" class="course-navi inview-target">
        <CourseNavi courseData={courseData} />
    </div>
    <div id="course-list" class="course-list">
        {courseData.map((item,index)=>
            <>
            <CourseItem data={item} itemId={`course-${index}`} />
            {index !== courseData.length - 1 ?
                <hr class="border" />
                : ""
            }
            </>
        )}
    </div>
</div>
<style>
    .container {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        width: var(--content-width);
        margin: 0 auto;
    }
    .course-navi {
        position: sticky;
        top: 80px;
        width: 320px;
    }
    .course-list {
        display: grid;
        gap: 160px;
        width: calc(100% - 368px);
    }
    .border {
        display: block;
        width: 100%;
        height: 1px;
        background: rgba(0,0,0,0.08);
    }
</style>
<script>
    (function(){
        const courseList = document.getElementById('course-list');
        const courseNavi = document.getElementById('course-navi');
        const courseItems = courseList.querySelectorAll('.course-item');
        const sectionCourse = document.getElementById('course');
        const sectionBg = sectionCourse.querySelector('.section-course__bg');
        const naviItems = courseNavi.querySelectorAll('.course-navi__item');
        const setActiveItem = () => {
            let activeItemIndex = 0;
            for(let i=0; i<courseItems.length; i++) {
                let offsetTop = Math.floor(courseItems[i].getBoundingClientRect().top);
                if(offsetTop < 360) {
                    activeItemIndex = i;
                }
            }
            if (sectionBg) {
                if (courseList.getBoundingClientRect().top > 320) {
                    sectionBg.classList.add('is-hide');
                } else if (courseList.getBoundingClientRect().top + courseList.clientHeight > 160) {
                    const bgColor = naviItems[activeItemIndex].getAttribute("data-color");
                    sectionCourse.style.setProperty("--bg-color",bgColor);
                    sectionBg.classList.remove('is-hide');
                } else {
                    sectionBg.classList.add('is-hide');
                }
            }
            const activeNaviItem = naviItems[activeItemIndex];
            for(let i=0; i<naviItems.length; i++) {
                if (i === activeItemIndex) {
                    naviItems[i].classList.add('is-active');
                } else {
                    naviItems[i].classList.remove('is-active');
                }
            }
        }
        setActiveItem();
        window.addEventListener('scroll',setActiveItem);
    }());
</script>