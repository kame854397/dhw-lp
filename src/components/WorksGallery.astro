---
import Button from "./Button.astro";
import SlidePagination from "./SlidePagination.astro";
import PageNaviButtons from "./PageNaviButtons.astro";
import { Img } from 'astro-imagetools/components';
const works = [
    {
        title: "卒業生〇〇さんの制作物",
        url: "https://spread-rui.com/",
        image: "/images/works-horikoshi.jpg",
        thumbnail: "/images/works-horikoshi-thumbnail.jpg",
    },
    {
        title: "卒業生〇〇さんの制作物",
        url: "https://spread-rui1.com/",
        image: "/images/works-mikazuki.jpg",
        thumbnail: "/images/works-mikazuki-thumbnail.jpg",
    },
    {
        title: "卒業生〇〇さんの制作物",
        url: "https://spread-rui2.com/",
        image: "/images/works-enomoto.jpg",
        thumbnail: "/images/works-enomoto-thumbnail.jpg",
    },
    {
        title: "卒業生〇〇さんの制作物",
        url: "https://spread-rui3.com/",
        image: "/images/works-mikazuki.jpg",
        thumbnail: "/images/works-mikazuki-thumbnail.jpg",
    },
    {
        title: "卒業生〇〇さんの制作物",
        url: "https://spread-rui4.com/",
        image: "/images/works-enomoto.jpg",
        thumbnail: "/images/works-enomoto-thumbnail.jpg",
    },
];
---
<div class="container">
    <div id="works-container" class="works-container">
        <div class="works-list" data-items-count={works.length} style={`--slide-count:${works.length};`}>
            {works.map((item,index) =>
                <div class={`works-item ${index===0 ? "is-active" : ""}`} data-url={item.url}>
                    <div class="image">
                        <Img src={item.image} alt="" loading="lazy" format="webp" />
                    </div>
                    <a href={item.url} class="url">{item.url}</a>
                </div>
            )}
        </div>
        <div class="navi-buttons">
            <PageNaviButtons />
        </div>
        <div class="pagination">
            <SlidePagination bulletCount={works.length} />
        </div>
        <div class="works-button">
            <Button label="WEBサイトを見る" href={works[0].url} target="_blank" />
        </div>
    </div>
    <div class="selector-container">
        <ul id="works-selector" class="selector">
            {works.map((item,index) =>
                <li class={`selector-item item-${index} ${index===0 ? "is-active" : ""}`}>
                    <button>
                        <div class="thumbnail-container">
                            <div class="thumbnail">
                                <Img src={item.thumbnail} alt="" format="webp" />
                            </div>
                            <div class="thumbnail-overlay">これを見る</div>
                        </div>
                        <p class="title">{item.title}</p>
                    </button>
                </li>
            )}
        </ul>
    </div>
</div>
<script>
    (function(){
        const container = document.getElementById('works-container');
        const worksList = container.querySelector<HTMLElement>('.works-list');
        const worksItem = container.querySelectorAll('.works-item');
        const button = container.querySelector('.works-button a');
        const selector = document.getElementById('works-selector');
        const selectorItem = selector.querySelectorAll('.selector-item');
        const navi = document.getElementById("works-gallery-Navi");
        const prevButton = navi.querySelector('.button--prev');
        const nextButton = navi.querySelector('.button--next');
        const pagination = container.querySelector('.slide-pagination');
        let prevSlideIndex = 0;
        prevButton.classList.add('is-disabled');
        selector.addEventListener('scroll',function(){
            const scrollPositionY = selector.scrollTop;
            if (scrollPositionY > 4) {
                this.classList.add('is-scrolled');
            } else {
                this.classList.remove('is-scrolled');
            }
        });
        const changeSlide = (slideIndex) => {
            if (slideIndex === 0) {
                worksItem[slideIndex].classList.add("is-scrolling-up");
            } else if (prevSlideIndex > slideIndex) {
                worksItem[slideIndex].classList.add("is-scrolling-up");;
            } else {
                worksItem[slideIndex].classList.add("is-scrolling-down");
            }
            setTimeout(function(){
                worksItem[slideIndex].classList.remove("is-scrolling-down");
                worksItem[slideIndex].classList.remove("is-scrolling-up");
            },250);
            worksList.style.setProperty("--active-slide-index",slideIndex);
            const href = worksItem[slideIndex].getAttribute("data-url");
            button.setAttribute("href",href);
            for (let j=0; j<selectorItem.length; j++) {
                selectorItem[j].classList.remove("is-active");
            }
            selectorItem[slideIndex].classList.add("is-active");
            prevSlideIndex = slideIndex;

            prevButton.classList.remove('is-disabled');
            nextButton.classList.remove('is-disabled');
            if (prevSlideIndex === 0) {
                prevButton.classList.add('is-disabled');
            }
            if (prevSlideIndex === worksItem.length - 1) {
                nextButton.classList.add('is-disabled');
            }

            const paginationBullets = pagination.querySelectorAll('.bullet');
            console.log(paginationBullets);
            for (let i=0; i<paginationBullets.length; i++) {
                if(i === slideIndex) {
                    paginationBullets[i].classList.add('is-active');
                } else {
                    paginationBullets[i].classList.remove('is-active');
                }
            }
        }

        for (let i=0; i<selectorItem.length; i++) {
            selectorItem[i].addEventListener('click',function(){
                changeSlide(i);
            });
        }
        
        prevButton.addEventListener('click',function(){
            if (prevSlideIndex === 0) {
                changeSlide(prevSlideIndex)
            } else {
                changeSlide(prevSlideIndex - 1);
            }
        });
        nextButton.addEventListener('click',function(){
            if (prevSlideIndex === worksItem.length - 1) {
                changeSlide(prevSlideIndex);
            } else {
                changeSlide(prevSlideIndex + 1);
            }
        });
    }());
</script>
<style>
    .container {
        position: relative;
        display: flex;
        justify-content: space-between;
        width: var(--content-width);
        margin: 0 auto;
    }
    .selector {
        width: 100%;
        height: 100%;
        display: grid;
        gap: 32px;
        padding: 4px 8px 64px 24px;
        overflow-y: scroll;
    }
    .selector-container {
        position: absolute;
        top: 0;
        right: 0;
        z-index: 0;
        height: 100%;
        width: 408px;
    }
    .selector-container::after {
        content: "";
        position: absolute;
        left: 0;
        bottom: -1px;
        width: 100%;
        height: 80px;
        z-index: 2;
        background: linear-gradient(transparent,var(--color-white-secondary));
        pointer-events: none;
    }
    .selector-container::before {
        content: "";
        position: absolute;
        left: 0;
        top: -1px;
        width: 100%;
        height: 80px;
        z-index: 2;
        background: linear-gradient(var(--color-white-secondary),transparent);
        pointer-events: none;
        opacity: 0;
        transition: opacity 0.5s;
    }
    .selector-container:has(.selector.is-scrolled)::before {
        opacity: 1;
    }
    .slector.is-scrolled::before {
        opacity: 1;
    }

    .thumbnail-container {
        position: relative;
        width: 100%;
        margin: 0 0 16px;
        border-radius: 12px;
        box-shadow: var(--shadow-primary-medium);
        overflow: hidden;
        transition: opacity 0.5s;
    }
    .thumbnail {
        transition: transform 0.5s;
    }
    .thumbnail-overlay {
        position: absolute;
        inset: 0;
        display: flex;
        justify-content: center;
        align-items: center;
        text-align: center;
        font-size: 20px;
        color: var(--color-white-primary);
        background: rgba(33,33,33,0.7);
        opacity: 0;
        pointer-events: none;
        transition: opacity 0.5s;
    }
    .thumbnail-overlay::before {
        content: "";
        display: block;
        width: 32px;
        height: 32px;
        background: var(--color-white-primary);
        -webkit-mask: url("/images/icon-zoom.svg") center/contain no-repeat;
        mask: url("/images/icon-zoom.svg") center/contain no-repeat;
    }
    .title {
        position: relative;
        padding: 0 0 0 40px;
        text-align: left;
        font-size: 22px;
    }
    .title::before {
        content: "";
        position: absolute;
        top: 2px;
        left: 0;
        width: 30px;
        height: 30px;
        background: var(--color-lightgray-secondary);
        border: 1px solid rgba(255,255,255,0.5);
        border-radius: 12px;
        box-shadow: var(--shadow-primary-small);
        transition: background-color 0.25s;
    }
    :where(.selector-item:hover:not(.is-active)) .thumbnail {
        transform: scale(1.2);
    }
    :where(.selector-item:hover:not(.is-active)) .thumbnail-overlay {
        opacity: 1;
    }
    :where(.selector-item.is-active) .title::before {
        background-color: var(--color-orange-primary);
    }
    :where(.selector-item.is-active) .thumbnail-container {
        outline: 4px solid var(--color-orange-primary);
    }
    .works-container {
        position: relative;
        width: calc(100% - 440px);
        max-height: calc(100vh - 220px);
        min-height: 400px;
        aspect-ratio: 1;
        border-radius: 24px;
        box-shadow: var(--shadow-primary-medium);
    }
    .works-container::before {
        content: "";
        position: absolute;
        inset:-8px;
        z-index: -1;
        background: var(--color-pink-primary);
        border-radius: 24px;
        transform: translate(-16px,16px) rotate(-4deg);
    }
    .works-button {
        position: absolute;
        width: 100%;
        max-width: 280px;
        right: 40px;
        bottom: -16px;
        z-index: 4;
    }
    .works-item {
        width: 100%;
        height: 100%;
        transform: translate(0,calc(-100% * var(--active-slide-index)));
        transition: transform 0.25s,translate 0.25s;
    }
    .works-item.is-scrolling-up,
    .works-item.is-scrolling-down {
        filter: url(#chromaticAberrationLarge);
    }
    .works-item.is-scrolling-up {
        translate: 0 80px;
    }
    .works-item.is-scrolling-down {
        translate: 0 -80px;
    }
    .works-item.is-scrolling-up .image,
    .works-item.is-scrolling-down .image {
        filter: blur(2px);
    }
    .works-list {
        position: relative;
        z-index: 0;
        width: 100%;
        height: 100%;
        background: var(--color-black-primary);
        border-radius: 24px;
        border: 4px solid var(--color-gray-primary);
        overflow: hidden;
    }
    .works-list::-webkit-scrollbar {
        display: none;
    }
    .works-list::before {
        content: "";
        position: absolute;
        inset: 0;
        z-index: 2;
        background: url("/images/noise.png") center/100px repeat;
        animation: overlay-noise 0.5s 0s both normal infinite steps(5);
        mix-blend-mode: hard-light;
        border-radius: 24px;
        opacity: 0;
        transition: opacity 0.5s;
    }
    .works-list:has(.works-item.is-scrolling-up,.works-item.is-scrolling-down)::before {
        opacity: 1;
        transition: opacity 0.25s;
    }
    .image :global(img) {
        width: 100%;
        height: 100%;
        object-fit: cover;
        object-position: center top;
    }
    .url {
        position: absolute;
        bottom: 0;
        left: 0;
        padding: 8px 16px;
        border-radius: 0 12px 0 0;
        background: rgba(255,255,255,0.9);
        text-decoration: underline;
    }
    .navi-buttons {
        position: absolute;
        bottom: 56px;
        left: -16px;
    }
    .pagination {
        position: absolute;
        top: 24px;
        right: -24px;
        z-index: 4;
    }
</style>